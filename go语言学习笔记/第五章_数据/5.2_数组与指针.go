package main

import "fmt"

//指针数组和数组指针的区别
//指针数组是指元素为指针类型的数组，数组指针式获取数组变量的地址。

func array1() {
	x,y:=10,20
	a:=[...]*int{&x,&y}
	p:=&a
	fmt.Printf("%T,%v\n",a,a)//打印了指针数组，其中的元素是指针指向的地址
	fmt.Printf("%T,%v\n",p,p)//打印了数组指针，该指针指向了一个数组，数组内元素又是指针元素

}
//数组指针可以直接用来操作元素
func array2(){
	a:=[...]int{1,2}
	p:=&a
	p[1] += 10		//此处p是一个指向数组a的指针，却完成了和a相同的功能
	fmt.Println(p[1],a[1])
}

//与c数组变量隐式作为指针使用不同，Go数组是值类型，赋值和传递参数都会复制整个数组数据
func array3(){
	a:=[2]int{10,20}
	var b [2]int
	b = a
	fmt.Printf("a:%p,%v\n",&a,a)//输出结果可以发现a和b的地址值不同了
	fmt.Printf("b:%p,%v\n",&b,b)

}

func main() {
	array1()
	fmt.Println("***************")
	array2()
	fmt.Println("***************")
	array3()
}
//输出
//[2]*int,[0xc000062080 0xc000062088]
//*[2]*int,&[0xc000062080 0xc000062088]
//***************
//12 12
//***************
//a:0xc0000620d0,[10 20]
//b:0xc0000620e0,[10 20]